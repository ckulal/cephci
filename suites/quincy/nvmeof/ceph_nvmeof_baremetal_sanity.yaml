tests:

# Set up the cluster
  - test:
      abort-on-fail: true
      module: install_prereq.py
      name: install ceph pre-requisites

  - test:
      abort-on-fail: true
      config:
        verify_cluster_health: true
        steps:
          - config:
              command: bootstrap
              service: cephadm
              args:
                mon-ip: node1
                registry-url: registry.redhat.io
                allow-fqdn-hostname: true
          - config:
              command: add_hosts
              service: host
              args:
                attach_ip_address: true
                labels: apply-all-labels
          - config:
              command: apply
              service: mgr
              args:
                placement:
                  label: mgr
          - config:
              command: apply
              service: mon
              args:
                placement:
                  label: mon
          - config:
              command: apply
              service: osd
              args:
                all-available-devices: true
      desc: RHCS cluster deployment using cephadm
      destroy-clster: false
      module: test_cephadm.py
      name: deploy cluster

#  Test cases to be executed
  - test:
      abort-on-fail: true
      config:
        command: add
        id: client.1
        nodes:
          - node6
          - node7
        install_packages:
          - ceph-common
        copy_admin_keyring: true
      desc: Setup client on NVMEoF gateway
      destroy-cluster: false
      module: test_client.py
      name: configure Ceph client
      polarion-id: CEPH-83573758

#  Configure Ceph NVMeoF gateway
#  Configure Initiators
#  Run IO on NVMe Targets
  - test:
      abort-on-fail: true
      config:
        gw_node: node6
        rbd_pool: rbd
        do_not_create_image: true
        rep-pool-only: true
        rep_pool_config:
          pool: rbd
        install: true                           # Run SPDK with all pre-requisites
        cleanup:
          - pool
          - subsystems
          - initiators
          - gateway
        subsystems:                             # Configure subsystems with all sub-entities
          - nqn: nqn.2016-06.io.spdk:cnode1
            serial: 1
            bdevs:
              count: 1
              size: 10G
            listener_port: 5001
            allow_host: "*"
        initiators:                             # Configure Initiators with all pre-req
          - subnqn: nqn.2016-06.io.spdk:cnode1
            listener_port: 5001
            node: node7
      desc: Setup NVMEoF Gateway and Run IOs on targets
      destroy-cluster: false
      module: test_ceph_nvmeof_gateway.py
      name: configure Ceph NVMEoF Gateway
      polarion-id:

  - test:
      abort-on-fail: true
      config:
        gw_node: node6
        rbd_pool: rbd
        do_not_create_image: true
        rep-pool-only: true
        rep_pool_config:
          pool: rbd
        install: true                           # Run SPDK with all pre-requisites
        cleanup:
          - pool
          - subsystems
          - initiators
          - gateway
        subsystems:                             # Configure subsystems with all sub-entities
          - nqn: nqn.2016-06.io.spdk:cnode1
            serial: 1
            bdevs:
              count: 10
              size: 10G
            listener_port: 5001
            allow_host: "*"
          - nqn: nqn.2016-06.io.spdk:cnode2
            serial: 2
            bdevs:
              count: 10
              size: 15G
            listener_port: 5002
            allow_host: "*"
        initiators:                             # Configure Initiators with all pre-req
          - subnqn: nqn.2016-06.io.spdk:cnode1
            listener_port: 5001
            node: node7
          - subnqn: nqn.2016-06.io.spdk:cnode2
            listener_port: 5002
            node: node7
      desc: Run IOs on multiple targets
      destroy-cluster: false
      module: test_ceph_nvmeof_gateway.py
      name: Performs IOs on targets from multiple subsystems
      polarion-id:

  - test:
      name: librbd VS nvmeof - Read and Write IO comparison bench test
      description: Write and Read IO comparison on 10G image with 4kb-block-size
      module: test_io_perf.py
      config:
        iterations: 1               # number of iterations to find out average
        io_profiles:
          - FIO_WRITE_BS_4k_IODepth8_LIBAIO
          - FIO_READ_BS_4k_IODepth8_LIBAIO
        io_exec:
            -   proto: librbd
                image:
                    size: 10G
                    count: 10
                node: node7             # client node
            -   proto: nvmeof
                image:
                    size: 10G
                    count: 10
                gw_node: node6          # gateway node
                initiator_node: node7   # client node
